//2. Статус код 200
pm.test("Status 200", function () {
    pm.response.to.have.status(200);
});
//3. Спарсить response body в json.
var responseJson = pm.response.json();

console.log("name = " + responseJson.name + " = " + typeof(responseJson.name))
console.log("age = " + responseJson.age + " = " + typeof(responseJson.age))
console.log("salary = " + responseJson.salary + " = " + typeof(responseJson.salary))
pm.test("name = Vladislav / age = 26 / salary = 1000", function () {
//4. Проверить, что name в ответе равно name s request (name вбить руками.)
    pm.expect(responseJson.name).to.eql("Vladislav");
//5. Проверить, что age в ответе равно age s request (age вбить руками.)
    pm.expect(responseJson.age).to.eql("26");
//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
    pm.expect(responseJson.salary).to.eql(1000);
});
//7. Спарсить request.
var requestJson = (request.data)
pm.test("name.req = name.res / age.req = age.res / salary.req = salary.res", function () {
//8. Проверить, что name в ответе равно name s request (name забрать из request.)
    pm.expect(responseJson.name).to.eql(requestJson.name);
//9. Проверить, что age в ответе равно age s request (age забрать из request.)
    pm.expect(responseJson.age).to.eql(requestJson.age);
//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
    console.log ("req Salry = " + requestJson.salary + typeof(requestJson.salary))
    var sal = +requestJson.salary
    pm.expect(responseJson.salary).to.eql(sal);
    console.log ("req Salry = " + sal + typeof(sal))
//11. Вывести в консоль параметр family из response.
    console.log(responseJson.family)
//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)
    var sal1_5 = responseJson.family.u_salary_1_5_year
    console.log ("u_salary_1_5_year" + sal1_5 + typeof(sal1_5))
    pm.expect(sal1_5).to.eql(sal*4)
})
//2. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});
//3. Спарсить response body в json.
var responseJson = pm.response.json();
//4. Спарсить request.
var requestJson = pm.request.toJSON().url.query;
console.log (requestJson)
pm.test("Проверка значений", function(){
//5. Проверить, что name в ответе равно name s request (name забрать из request.)
    pm.expect(responseJson.name).to.eql(requestJson[0].value)
//6. Проверить, что age в ответе равно age s request (age забрать из request.)
    pm.expect(responseJson.age).to.eql(requestJson[1].value)
    var reqsal = +requestJson[2].value
    pm.expect(responseJson.salary).to.eql(reqsal)   
})
console.log(responseJson.family)
console.log(responseJson)
console.log(responseJson.family.pets.dog)

pm.test("Dog have = name/age", function () {
    pm.expect(responseJson.family.pets.dog).to.have.property("name")
    pm.expect(responseJson.family.pets.dog).to.have.property("age")
    pm.expect(responseJson.family.pets.dog.name).to.have.include("Luky")
    var dogage = responseJson.family.pets.dog.age
    console.log(typeof(dogage))
    pm.expect(dogage).to.eql(4)
});
pm.test("status 200", function () {
    pm.response.to.have.status(200)
})
var responseJson = pm.response.json();
var requestJson = pm.request.toJSON().url.query;
console.log(requestJson)
console.log(responseJson)
pm.test("checking values", function () {
    pm.expect(responseJson.name).to.eql(requestJson[0].value);
    var ageReq = +requestJson[1].value
    pm.expect(responseJson.age).to.eql(ageReq)
    console.log (requestJson[2])
    console.log (responseJson.salary)
    console.log (responseJson.salary[0])
    console.log (responseJson.salary[1])
    console.log (responseJson.salary[2])
    console.log (typeof (requestJson[2].value))
    console.log (typeof (responseJson.salary[0]))
    var salReq = +requestJson[2].value
    pm.expect(responseJson.salary[0]).to.eql(salReq)
    var salRes1 = +responseJson.salary[1]
    pm.expect(salRes1).to.eql(salReq*2)
    var salRes2 = +responseJson.salary[2]
    pm.expect(salRes2).to.eql(salReq*3)
    pm.environment.set("name", responseJson.name);
    pm.environment.set("age", responseJson.age);
    pm.environment.set("salary", responseJson.salary[0])
});
for (responseJson.salary in responseJson) {
    console.log(responseJson[responseJson.salary]);
}
var responseJson = pm.response.json()
var requestJson = (request.data)

pm.test("status is 200", function (){
    pm.response.to.have.status (200)
})

pm.test ("check param", function (){
    pm.expect(responseJson).to.have.property("start_qa_salary")
    pm.expect(responseJson).to.have.property("qa_salary_after_6_months")
    pm.expect(responseJson).to.have.property("qa_salary_after_12_months")
    pm.expect(responseJson).to.have.property("qa_salary_after_1.5_year")
    pm.expect(responseJson).to.have.property("qa_salary_after_3.5_years")
    pm.expect(responseJson).to.have.property("person")
    var reqSal = +requestJson.salary
    pm.expect (responseJson.start_qa_salary).to.eql(reqSal)
        pm.expect(responseJson.qa_salary_after_6_months).to.eql(reqSal*2)
        pm.expect(responseJson.qa_salary_after_12_months).to.eql(reqSal*2.7)
        pm.expect(responseJson["qa_salary_after_1.5_year"]).to.eql(reqSal*3.3)
        pm.expect(responseJson["qa_salary_after_3.5_years"]).to.eql(reqSal*3.8)
        pm.expect(responseJson.person.u_name[1]).to.eql(reqSal)
        var reqAge = +requestJson.age
        pm.expect(responseJson.person.u_age).to.eql(reqAge)
        pm.expect(responseJson.person.u_salary_5_years).to.eql(reqSal*4.2)
        var obj =  responseJson.person;
        for (var prop in obj) {
        console.log(prop + " = " + obj[prop]);
        }
})


