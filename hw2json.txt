JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер. git clone https://github.com/DeiviFrod/JSON.git
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add new.json
 8. Закоммитить файл. - git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий. git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - 
vim new.json 
{
        "ФИО": "Крукович Владислав Игревич",
        "Возраст": "25 лет",
        "Кол-во домашних животных": {
                "кошка Тесла": "5 лет",
                "кот Фикус": "2 года"
        },
        "Будущая желаемая зарплата": "1000000 евро"
}

 11. Отправить изменения на внешний репозиторий. - 
git commit -a -m " add personal information"
git push
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json и пишем: 
{
        "Любимый фильм": [
                "Серия Властелин колец",
                "Серия Темный рыцарь",
                "Район номер 9"
        ],
        "Любимый сериал": "Спартак",
        "Любимая еда": "Картошка в любом виде",
        "Любимое время года": "лето",
        "Страна которую хотел бы посетить": "США"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - 
touch skils.json
vim skils.json
{
        "Скилы": [
                "Тестирование ПО",
                "GitHub",
                "JSON",
                "Postman",
                "Мобильное тестирование",
                "Терминал линукс",
                "Основы SQL",
                "Нагрузочное тестирование в Jmeter",
                "Основы Python"
        ]
}

 15. Отправить сразу 2 файла на внешний репозиторий. -
git add .
git commit -m "add 2 new json files"
git push
 16. На веб интерфейсе создать файл bug_report.json. - нажать add file>create new file> 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. нажать commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. Нажать на файл>edit this file(значок карандаша)

{
  "Описание": "Не отправляется письмо на почту с русскими буквами в имэйле",
  "Серьёзность": "Критическая",
  "Шаги воспроизведения": [
    "перейти на сайт почты",
    "зайти в личный кабинет (данные для входа_ссылка на базу)",
    "нажать отправить письмо",
    "в поле (кому) ввести имэйл (пример@пример.ру)",
    "в поле текст написать любой текст",
    "нажать отправить" 
    ],
  "Ожидаемый результат": "Письмо отправлено",
  "Фактический результат": "Кнопка отправить неактивна"
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. написать комит в троке (commit changes)>нажать commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON - git pull