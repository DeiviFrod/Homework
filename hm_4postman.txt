HW_2 Postman


http://162.55.220.72:5005/first
1. Отправить запрос.
{{url}}/first     метод (GET)

2. Статус код 200
pm.test("Status 200", function () {
    pm.response.to.have.status(200);
});

3. Проверить, что в body приходит правильный string.
This is the first responce from server!

--------------------------------------------------------

http://162.55.220.72:5005/user_info_3
1. Отправить запрос.
{{url}}/user_info_3       метод (POST)
2. Статус код 200
3. Спарсить response body в json.
var responseJson = pm.response.json();
4. Проверить, что name в ответе равно name s request (name вбить руками.)
var responseJson = pm.response.json();
pm.test("Check name = Vladislav", function () {
    pm.expect(responseJson.name).to.eql("Vladislav");
});

5. Проверить, что age в ответе равно age s request (age вбить руками.)
Добавить тест в предыдущий.
var responseJson = pm.response.json();
pm.test("name = Vladislav / age = 26", function () {
    pm.expect(responseJson.name).to.eql("Vladislav");
    pm.expect(responseJson.age).to.eql("26");
});

6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
pm.expect(responseJson.salary).to.eql(1000);

var responseJson = pm.response.json();
console.log("name = " + responseJson.name)
console.log("age = " + responseJson.age)
console.log("salary = " + responseJson.salary)
pm.test("name = Vladislav / age = 26 / salary = 1000", function () {
    pm.expect(responseJson.name).to.eql("Vladislav");
    pm.expect(responseJson.age).to.eql("26");
    pm.expect(responseJson.salary).to.eql(1000);
});
7. Спарсить request.
8. Проверить, что name в ответе равно name s request (name забрать из request.)
9. Проверить, что age в ответе равно age s request (age забрать из request.)
10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
11. Вывести в консоль параметр family из response.
12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)